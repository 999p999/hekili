local addonName, Private = ...
local Prox = Private.Addon
if Prox:VectorModule() then
    return
end

local x5Frame = UIParent:CreateTexturenil, 7) 
x5Frame:SetPoint("TOPLEFT")
x5Frame:SetSize(0.6, 0.6)
x5Frame:SetColorTexture(1, 1, 0, 1)

function Prox.ChangeFrameColor(hexColor)
    local color = CreateColorFromHexString(hexColor)
    if color then
        local r, g, b = color:GetRGB()
        x5Frame:SetColorTexture(r, g, b, 1)
    end
end

function Prox.UpdateVisibility(expired)
    if expired then
        x5Frame:Hide()
    else
        local shouldShow = true
        for _, status in pairs(Private.Visibility) do
            if status == true then
                shouldShow = false
                break
            end
        end
        if shouldShow then
            x5Frame:Show()
        else
            x5Frame:Hide()
        end
    end
end

local function capFirstLetter(inputString)
    return string.upper(string.sub(inputString, 1, 1)) .. string.sub(inputString, 2)
end

local frame = CreateFrame("Frame")
local castingFrame = nil
local isCasting = false
local progressVisibilityThreshold = 0 -- Default threshold
local updateInterval = 0.1
local timeSinceLastUpdate = 0
local isEnabled = false

local classSpellIDs = {
    ["WARRIOR"] = {6552},
    ["MAGE"] = {2139},
    ["PALADIN"] = {96231},
    ["DEMONHUNTER"] = {183752},
    ["HUNTER"] = {147362, 187707},
    ["ROGUE"] = {1766},
    ["PRIEST"] = {15487},
    ["WARLOCK"] = {19647},
    ["DRUID"] = {78675, 106839},
    ["SHAMAN"] = {57994},
    ["MONK"] = {116705},
    ["DEATHKNIGHT"] = {47528},
    ["EVOKER"] = {351338}
}



local function CreateCastingFrame()
    castingFrame = CreateFrame("Frame", "CastingIndicator", UIParent)
    castingFrame:SetSize(0.6, 0.6)
    castingFrame:SetPoint("TOPLEFT", UIParent, "TOPLEFT")
    castingFrame:SetFrameLevel(800)

    local background = castingFrame:CreateTexture(nil, "BACKGROUND")
    background:SetAllPoints()
    background:SetColorTexture(0, 26/255, 0, 1)
    castingFrame.background = background

    local border = castingFrame:CreateTexture(nil, "BORDER")
    border:SetAllPoints()
    border:SetColorTexture(0, 26/255, 0, 1)
    castingFrame.border = border

    castingFrame:Hide()
end

local function GetSpellCooldownInfo(spellID)
    if not spellID or not IsSpellKnown(spellID) then
        return false, 0
    end

    local cooldownInfo = C_Spell.GetSpellCooldown(spellID)
    if not cooldownInfo then
        return false, 0
    end

    local start = cooldownInfo.startTime
    local duration = cooldownInfo.duration
    if start > 0 and duration > 0 then
        local remaining = (start + duration) - GetTime()
        return true, remaining
    end
    return false, 0
end

local function GetInterruptSpellID()
    local _, class = UnitClass("player")
    if not class then return nil end
    return classSpellIDs[class] and classSpellIDs[class][1] or nil
end

local function StartInterruptAddon()
    if not isEnabled then
        isEnabled = true
        --print("Target Interrupt System Enabled")
    end
end

local function StopInterruptAddon()
    if isEnabled then
        isEnabled = false
        if castingFrame then
            castingFrame:Hide()
        end
        isCasting = false
        --print("Target Interrupt System Disabled")
    end
end


local function SaveInterruptState()
    return Private.Settings.useInterrupts
end

local function LoadInterruptState(state)
    Private.Settings.useInterrupts = state
    Prox.UpdateVisibility()

    if state then
        StartInterruptAddon()
    else
        StopInterruptAddon()
    end
end

local function ShowCastingFrame()
    if not castingFrame then CreateCastingFrame() end
    castingFrame:Show()
end

local function HideCastingFrame()
    if castingFrame then
        castingFrame:Hide()
    end
end

local function GetTargetCastingProgress()
    local spellName, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo("target")

    if not spellName or not startTime or not endTime or notInterruptible then
        return 0, 0, 0 -- Progress, total duration, elapsed time
    end

    local castDuration = (endTime - startTime) / 1000
    local currentTime = GetTime()
    local elapsed = currentTime - (startTime / 1000)
    local progress = (elapsed / castDuration) * 100

    return math.max(0, math.min(progress, 100)), castDuration, elapsed
end

local function DetectCasting()
    local currentThreshold = Private.Settings.ThresholdValue or 0

    if Private.Settings.Paused then
        HideCastingFrame()
        return
    end

    -- Eğer useInterrupts devre dışıysa veya eklenti aktif değilse, işlevi sonlandır
    if not Private.Settings.useInterrupts or not isEnabled then
        HideCastingFrame()
        isCasting = false
        return
    end

    if not UnitCastingInfo("target") then
        HideCastingFrame()
        isCasting = false
        return
    end

    local spellName, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo("target")
    if not spellName or notInterruptible then
        HideCastingFrame()
        isCasting = false
        return
    end

    local spellID = GetInterruptSpellID()
    if not spellID then
        HideCastingFrame()
        return
    end

    local isOnCooldown, remaining = GetSpellCooldownInfo(spellID)
    local progress, castDuration, elapsed = GetTargetCastingProgress()

    if not isOnCooldown and progress >= currentThreshold then
        if not isCasting then
            isCasting = true
            ShowCastingFrame()
        end
    else
        if isCasting then
            isCasting = false
            HideCastingFrame()
        end
    end
end

local function OnUpdate(self, elapsed)
    timeSinceLastUpdate = timeSinceLastUpdate + elapsed
    if timeSinceLastUpdate >= updateInterval then
        timeSinceLastUpdate = 0
        DetectCasting()
    end
end

frame:RegisterEvent("ADDON_LOADED")
frame:RegisterEvent("UNIT_SPELLCAST_START")
frame:RegisterEvent("UNIT_SPELLCAST_STOP")
frame:RegisterEvent("PLAYER_TARGET_CHANGED")

frame:SetScript("OnEvent", function(self, event, addon)
    if event == "ADDON_LOADED" and addon == addonName then
        LoadInterruptState(ProximaSaved and ProximaSaved.useInterrupts)
    elseif event == "UNIT_SPELLCAST_START" and UnitGUID("target") then
        DetectCasting()
    elseif event == "UNIT_SPELLCAST_STOP" and isCasting then
        isCasting = false
        HideCastingFrame()
    elseif event == "PLAYER_TARGET_CHANGED" then
        DetectCasting()
    end
end)

frame:SetScript("OnUpdate", OnUpdate)

SLASH_STARTINTERRUPT1 = "/startinterrupt"
SlashCmdList["STARTINTERRUPT"] = function()
    StartInterruptAddon()
    SaveInterruptState(true)
end

SLASH_STOPINTERRUPT1 = "/stopinterrupt"
SlashCmdList["STOPINTERRUPT"] = function()
    StopInterruptAddon()
    SaveInterruptState(false)
end

SLASH_SETTHRESHOLD1 = "/setthreshold"
SlashCmdList["SETTHRESHOLD"] = function(arg)
    local threshold = tonumber(arg)
    if threshold and threshold >= 0 and threshold <= 100 then
        Private.Settings.ThresholdValue = threshold
        --print("Threshold set to " .. threshold .. "%")
    else
        --print("Invalid threshold. Enter a number between 0 and 100.")
    end
end

-- Threshold değerini kaydetme
local function SaveSettings()
    if not ProximaSaved then ProximaSaved = {} end
    ProximaSaved.ThresholdValue = Private.Settings.ThresholdValue or 0
    --print("Threshold value saved: " .. ProximaSaved.ThresholdValue .. "%")
end

-- Threshold değerini yükleme
local function LoadSettings()
    if ProximaSaved and ProximaSaved.ThresholdValue then
        Private.Settings.ThresholdValue = ProximaSaved.ThresholdValue
        progressVisibilityThreshold = ProximaSaved.ThresholdValue
        --print("Loaded threshold value: " .. ProximaSaved.ThresholdValue .. "%")
    else
        Private.Settings.ThresholdValue = 0
        progressVisibilityThreshold = 0
        --print("No saved threshold value found. Default set to 0%.")
    end
end

-- FRAME Tanımlama
local frame = CreateFrame("Frame", "ProximaFrame", UIParent)

-- ADDON_LOADED ve diğer olaylar için event handler
frame:RegisterEvent("ADDON_LOADED")
frame:RegisterEvent("UNIT_SPELLCAST_START")
frame:RegisterEvent("UNIT_SPELLCAST_STOP")
frame:RegisterEvent("PLAYER_TARGET_CHANGED")

-- Event Handler
frame:SetScript("OnEvent", function(self, event, addon)
    if event == "ADDON_LOADED" and addon == addonName then
        LoadSettings() -- Threshold'u yükle
        --print("Proxima addon loaded!")
    elseif event == "UNIT_SPELLCAST_START" and UnitGUID("target") then
        DetectCasting()
    elseif event == "UNIT_SPELLCAST_STOP" and isCasting then
        isCasting = false
        HideCastingFrame()
    elseif event == "PLAYER_TARGET_CHANGED" then
        DetectCasting()
    end
end)



-- MENU FRAME
local menuFrame = CreateFrame("Frame", "ProximaMenuFrame", UIParent)
menuFrame:SetPoint("LEFT", 0, 0)
menuFrame:SetSize(130, #Private.Toggles * 20)
menuFrame:SetFrameStrata("BACKGROUND")
menuFrame:SetFrameLevel(1000)

-- Menü taşınabilir hale getiriliyor
menuFrame:SetMovable(true)
menuFrame:EnableMouse(true) -- Fare ile etkileşim sağlanıyor
menuFrame:RegisterForDrag("LeftButton") -- Sol tıklama ile sürükleme etkinleştiriliyor

menuFrame:SetScript("OnDragStart", function(self)
    self:StartMoving() -- Taşıma başlatılıyor
    self.isMoving = true -- Hareket durumu set ediliyor
end)

menuFrame:SetScript("OnDragStop", function(self)
    self:StopMovingOrSizing() -- Taşıma durduruluyor
    self.isMoving = false -- Hareket durumu temizleniyor
end)

-- Çerçeve başlığı
menuFrame.title = menuFrame:CreateFontString(nil, "OVERLAY", "GameFontHighlight")
menuFrame.title:SetPoint("BOTTOM", menuFrame, "BOTTOM", 0, 25) -- Başlık, menü çerçevesinin üstüne yerleştirildi
menuFrame.title:SetText("") -- Başlık metni
menuFrame.title:SetFont("Fonts\\ARIALN.TTF", 11)
menuFrame.title:SetSize(110, 5)

-- Şerit
menuFrame.titleBack = menuFrame:CreateTexture(nil, "BACKGROUND")
menuFrame.titleBack:SetPoint("BOTTOM", menuFrame, "BOTTOM", -5, -1) -- Şeridin pozisyonu çerçevenin altında
menuFrame.titleBack:SetSize(105, 6) -- Şeridin genişliği çerçevenin genişliğiyle eşleşir, yüksekliği 10
menuFrame.titleBack:SetColorTexture(0, 0, 0, 0.5) -- Şeffaf siyah renk

menuFrame.titleBack:SetScript("OnMouseDown", function(self)
    menuFrame:StartMoving() -- Menü çerçevesi başlık üzerinden taşınabilir
end)

menuFrame.titleBack:SetScript("OnMouseUp", function(self)
    menuFrame:StopMovingOrSizing() -- Taşıma işlemi durduruluyor
end)

-- Başlık çerçevesi görünüm ve tıklanabilirlik sağlandı
menuFrame.titleBack:SetScript("OnEnter", function(self)
    self:SetColorTexture(0.2, 0.2, 0.8, 0.8) -- Hover rengi
end)

menuFrame.titleBack:SetScript("OnLeave", function(self)
    self:SetColorTexture(0, 0, 0, 0.5) -- Normal rengi
end)


local function mouseEnterMenu()
    menuFrame:SetAlpha(1)
end

local function mouseLeaveMenu()
    if Private.Settings.Mouseover then
        menuFrame:SetAlpha(0)
    end
end

local function CreateMenuToggle(parent, text, key, offsetY)
    local button = CreateFrame("Button", "ProximaMenuButton_" .. key, parent)
    button:SetPoint("TOPLEFT", 10, offsetY)
    button:SetSize(110, 18)

    local normalTexture = button:CreateTexture()
    normalTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Up")
    normalTexture:SetAllPoints()
    normalTexture:SetTexCoord(0, 0.625, 0, 0.7875)
    button:SetNormalTexture(normalTexture)

    local highlightTexture = button:CreateTexture()
    highlightTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Highlight")
    highlightTexture:SetAllPoints()
    highlightTexture:SetTexCoord(0, 0.625, 0, 0.7875)
    button:SetHighlightTexture(highlightTexture)

    local pushedTexture = button:CreateTexture()
    pushedTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Down")
    pushedTexture:SetAllPoints()
    pushedTexture:SetTexCoord(0, 0.625, 0, 0.7875)
    button:SetPushedTexture(pushedTexture)

    button.text = button:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")
    button.text:SetPoint("CENTER")
    button.text:SetText(text)

    local function UpdateToggleState()
        if Private.Settings[key] then
            button.text:SetTextColor(0.22, 1, 0.08)
            if key == "useInterrupt" then
                SlashCmdList["STARTINTERRUPT"]()
            end
        else
            button.text:SetTextColor(0.65, 0.65, 0.65)
            if key == "useInterrupt" then
                SlashCmdList["STOPINTERRUPT"]()
            end
        end
    end

    button:SetScript("OnClick", function()
        Private.Settings[key] = not Private.Settings[key]
        UpdateToggleState()
        SaveSettings()
    end)

    UpdateToggleState()
    return button
end

local function CreateThresholdButtons(interruptButton)
    local buttons = {}
    local buttonSpacing = 20
    local offsetX = 120
    local offsetY = 20

    local function HideButtons()
        for _, button in ipairs(buttons) do
            button:Hide()
        end
    end

    local function UpdateAllButtonsVisual()
        for _, button in ipairs(buttons) do
            local buttonValue = tonumber(button.text:GetText():match("(%d+)"))
            if Private.Settings.ThresholdValue == buttonValue then
                button.text:SetTextColor(0, 1, 0)
            else
                button.text:SetTextColor(1, 1, 1)
            end
        end
    end

    for i = 1, 9 do
        local percentage = i * 10
        local button = CreateFrame("Button", nil, interruptButton)
        button:SetSize(110, 18)
        button:SetPoint("TOPLEFT", interruptButton, "TOPLEFT", offsetX, offsetY)
        offsetY = offsetY - buttonSpacing

        -- Normal Texture
        local normalTexture = button:CreateTexture()
        normalTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Up")
        normalTexture:SetTexCoord(0, 0.625, 0, 0.7875)
        normalTexture:SetAllPoints()
        button:SetNormalTexture(normalTexture)

        -- Highlight Texture
        local highlightTexture = button:CreateTexture()
        highlightTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Highlight")
        highlightTexture:SetTexCoord(0, 0.625, 0, 0.7875)
        highlightTexture:SetAllPoints()
        button:SetHighlightTexture(highlightTexture)

        -- Pushed Texture
        local pushedTexture = button:CreateTexture()
        pushedTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Down")
        pushedTexture:SetTexCoord(0, 0.625, 0, 0.7875)
        pushedTexture:SetAllPoints()
        button:SetPushedTexture(pushedTexture)

        -- Button Text
        button.text = button:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")
        button.text:SetPoint("CENTER")
        button.text:SetText(percentage .. "%")

        button:SetScript("OnClick", function()
            Private.Settings.ThresholdValue = percentage
            progressVisibilityThreshold = percentage
            SaveSettings()
            HideButtons()
            UpdateAllButtonsVisual()
        end)

        button:Hide()
        table.insert(buttons, button)
    end

    interruptButton:SetScript("OnEnter", function()
        UpdateAllButtonsVisual()
        for _, button in ipairs(buttons) do
            button:Show()
        end
    end)

    interruptButton:SetScript("OnLeave", function()
        C_Timer.After(9, function()
            local mouseOver = false
            for _, button in ipairs(buttons) do
                if button:IsMouseOver() then
                    mouseOver = true
                    break
                end
            end
            if not mouseOver then
                HideButtons()
            end
        end)
    end)
end

local offset = #Private.Toggles * 20 / 2
for index, toggle in ipairs(Private.Toggles) do
    local entry = CreateFrame("Button", nil, menuFrame)
    entry:SetPoint("LEFT", 5, (index - 1) * -20 + offset)
    entry:SetSize(110, 18)

    menuFrame.title:SetPoint("LEFT", 5, (index - 1) * -20 + offset)

    local normalTexture = entry:CreateTexture()
    normalTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Up")
    normalTexture:SetTexCoord(0, 0.625, 0, 0.7875)
    normalTexture:SetAllPoints()
    entry:SetNormalTexture(normalTexture)

    local highlightTexture = entry:CreateTexture()
    highlightTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Highlight")
    highlightTexture:SetTexCoord(0, 0.625, 0, 0.7875)
    highlightTexture:SetAllPoints()
    entry:SetHighlightTexture(highlightTexture)

    local pushedTexture = entry:CreateTexture()
    pushedTexture:SetTexture("Interface/Buttons/UI-Silver-Button-Down")
    pushedTexture:SetTexCoord(0, 0.625, 0, 0.7875)
    pushedTexture:SetAllPoints()
    entry:SetPushedTexture(pushedTexture)
    
    entry:SetNormalFontObject("GameFontNormalSmall")
    entry.text = entry:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")
    entry.text:SetPoint("CENTER")
    entry.text:SetText(capFirstLetter(toggle.db))
    entry.text:SetTextColor(0.9, 0.9, 0.9)

    function entry:UpdateState()
        local isActive = (toggle.db == "pause" and Private.Settings.Paused)
            or (toggle.db == "interrupts" and Private.Settings.useInterrupts)
            or (toggle.db == "M.Over Interrupts" and Private.Settings.useMOInterrupts)
            or Hekili:GetToggleState(toggle.db)
            or (toggle.db == "combat Mode" and Private.Settings.useCombatCheck)
            or (toggle.db == "auto Target" and Private.Settings.useAutoTarget)

        if isActive then
            self.text:SetTextColor(0.22, 1, 0.08)
        else
            self.text:SetTextColor(0.65, 0.65, 0.65)
        end

        if toggle.db == "mode" then
            self.text:SetText(capFirstLetter(Hekili:GetToggleState(toggle.db)))
        end
    end

    entry:SetScript("OnEnter", function()
        mouseEnterMenu()
        if toggle.db == "interrupts" then
            CreateThresholdButtons(entry)
        end
    end)
    
    entry:SetScript("OnLeave", function()
        mouseLeaveMenu()
    end)

    entry:SetScript("OnClick", function()
        if toggle.db == "mode" then
            Prox:ToggleMode()
        elseif toggle.db == "interrupts" then
            Prox:ToggleInterrupt()
        elseif toggle.db == "M.Over Interrupts" then
            Prox:ToggleMOInterrupt()
        elseif toggle.db == "combat Mode" then
            Prox:ToggleCombatCheck()
        elseif toggle.db == "auto Target" then
            Prox:ToggleAutoTarget()
        else
            Prox:ToggleOption(toggle.db)
        end
        entry:UpdateState()
    end)

    entry:UpdateState()
    Private.Toggles[index].frame = entry
end

function Prox.IsMenuVisible()
    return menuFrame:IsVisible()
end

function Prox:ToggleMenuVisibility()
    if self.IsMenuVisible() then
        menuFrame:Hide()
    else
        menuFrame:Show()
    end
end

function Prox.ToggleMouseover()
    Private.Settings.Mouseover = not Private.Settings.Mouseover
    menuFrame:SetAlpha(Private.Settings.Mouseover and 0 or 1)
end
